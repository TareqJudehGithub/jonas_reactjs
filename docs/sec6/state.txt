State
   Each React app is made of states and components.

  - What is state?
   - A state is internal data that can be updated by the component's logic.
   - State is data a component can hold overtime.
   - State is considered to be the memory of a component.
   - A good example for state, would be a user input field, a shopping cart.
   
   - States can be updated by the component it self. 
   - Updating state triggers react to update that component.
   - rendering a component in the UI is also called a "view".
   - State keeps the UI in sync with the data. So states allows us to update 
     the user view through rendering the component.
   
   - Each component manages it's OWN state. Changing a state in one component won't 
     affect other components.     
   - With states, the UI view is a reflection of data changing over time.
   - States are used to make components interactive.

  - How to use state?
   import { useState } from "react";
   - useState() function always return an array.
   - const arrName = useState(defaultValue, updatedValue);

   - Create a new state variable for any data the component should keep track of.
   - Create states for objects that you need to be dynamic, that you know they will 
     change in the future.
   - Only use states for data that will be re-rendered.

  - useState is a React Hook.
  - useState should only be used in a top level of a function under App(), not in a component 
    function, not conditionally, or a loop.
  -  *** We should only update a state in the useState hook, and not manually.
 
  What is a Controlled Element?
   - An element that has it's value defined by a state, and it also had an event handler
     that listens to any change, and update the state accordingly.
